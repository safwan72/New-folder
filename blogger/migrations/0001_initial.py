# Generated by Django 3.1.6 on 2021-02-13 16:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('_id_slug', models.SlugField(max_length=20, unique=True)),
                ('title', models.CharField(max_length=32, unique=True)),
                ('site_title', models.CharField(max_length=48, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=30, null=True)),
                ('last_name', models.CharField(blank=True, max_length=30, null=True)),
                ('about', models.TextField(blank=True, null=True)),
                ('profile_picture', models.ImageField(default='dummy-profile-pic-male1.webp', null=True, upload_to='')),
                ('gender', models.CharField(choices=[('m', 'Male'), ('f', 'Female'), ('o', 'Other')], max_length=1)),
                ('phone', models.CharField(max_length=15, null=True)),
                ('city', models.CharField(max_length=30, null=True)),
                ('state', models.CharField(blank=True, max_length=30, null=True)),
                ('zip_postal_code', models.CharField(max_length=30, null=True)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, null=True)),
                ('share_profile', models.BooleanField(default=False)),
                ('show_email_address', models.BooleanField(default=False)),
                ('show_blogs', models.BooleanField(default=False)),
                ('show_followed_sites', models.BooleanField(default=False)),
                ('comment_auto_publish', models.BooleanField(default=True)),
                ('occupation', models.CharField(max_length=72)),
                ('custom_interest', models.CharField(blank=True, max_length=24, null=True)),
                ('custom_stage', models.CharField(max_length=48)),
                ('template_name', models.CharField(choices=[('l', 'Light'), ('d', 'Dark')], max_length=2)),
                ('homepage', models.CharField(blank=True, max_length=30, null=True)),
                ('subscribers', models.IntegerField(default=0)),
                ('blogger', models.BooleanField(default=False)),
                ('admin', models.BooleanField(default=False)),
                ('status', models.BooleanField(default=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id_slug', models.SlugField(max_length=20, unique=True)),
                ('title', models.CharField(max_length=48)),
                ('priority', models.IntegerField(default=1)),
                ('status', models.BooleanField(default=1)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-priority', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Industry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id_slug', models.SlugField(max_length=20, unique=True)),
                ('title', models.CharField(max_length=32)),
                ('priority', models.IntegerField(default=1)),
                ('status', models.BooleanField(default=1)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-priority', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Interest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id_slug', models.SlugField(max_length=20, unique=True)),
                ('title', models.CharField(max_length=24)),
                ('priority', models.IntegerField(default=1)),
                ('status', models.BooleanField(default=1)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-priority', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id_slug', models.SlugField(max_length=20, unique=True)),
                ('title', models.CharField(max_length=75)),
                ('meta_title', models.CharField(max_length=100)),
                ('summary', models.TextField()),
                ('content', models.TextField()),
                ('published', models.BooleanField(default=False)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('publish_date', models.DateTimeField(blank=True, null=True)),
                ('viewed_count', models.IntegerField(default=0)),
                ('favourite_count', models.IntegerField(default=0)),
                ('like_count', models.IntegerField(default=0)),
                ('comment_count', models.IntegerField(default=0)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('parent_post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='blogger.post')),
            ],
            options={
                'ordering': ['-published', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id_slug', models.SlugField(max_length=20, unique=True)),
                ('title', models.CharField(max_length=48)),
                ('priority', models.IntegerField(default=1)),
                ('status', models.BooleanField(default=1)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-priority', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id_slug', models.SlugField(max_length=20, unique=True)),
                ('title', models.CharField(max_length=75)),
                ('meta_title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('priority', models.IntegerField(default=1)),
                ('status', models.BooleanField(default=1)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-priority', 'title'],
            },
        ),
        migrations.CreateModel(
            name='PostView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id_slug', models.SlugField(max_length=20, unique=True)),
                ('view_count', models.IntegerField(default=1)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogger.post')),
                ('viewed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-view_count'],
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id_slug', models.SlugField(max_length=20, unique=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogger.post')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id_slug', models.SlugField(max_length=20, unique=True)),
                ('title', models.CharField(max_length=75)),
                ('content', models.TextField()),
                ('priority', models.IntegerField(default=1)),
                ('published', models.BooleanField(default=False)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('publish_date', models.DateTimeField(blank=True, null=True)),
                ('parent_comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='blogger.comment')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogger.post')),
            ],
            options={
                'ordering': ['-published', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id_slug', models.SlugField(max_length=20, unique=True)),
                ('title', models.CharField(max_length=75)),
                ('meta_title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('priority', models.IntegerField(default=1)),
                ('status', models.BooleanField(default=1)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('parent_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='blogger.category')),
            ],
            options={
                'ordering': ['-priority', 'title'],
            },
        ),
        migrations.AddField(
            model_name='user',
            name='goals',
            field=models.ManyToManyField(to='blogger.Goal'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='industry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogger.industry'),
        ),
        migrations.AddField(
            model_name='user',
            name='interest',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='blogger.interest'),
        ),
        migrations.AddField(
            model_name='user',
            name='stage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='blogger.stage'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
